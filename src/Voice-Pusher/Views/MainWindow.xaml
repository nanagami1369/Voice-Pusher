<controls:MetroWindow x:Class="Voice_Pusher.Views.MainWindow"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:c="clr-namespace:Voice_Pusher.Views.Converter"
                      xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:fa="http://schemas.fontawesome.com/icons/"
                      xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                      xmlns:local="clr-namespace:Voice_Pusher.Views"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:prism="http://prismlibrary.com/"
                      xmlns:viewmodels="clr-namespace:Voice_Pusher.ViewModels"
                      Title="{Binding Title}"
                      Width="525"
                      Height="350"
                      d:DataContext="{d:DesignInstance Type=viewmodels:MainWindowViewModel}"
                      prism:ViewModelLocator.AutoWireViewModel="True"
                      mc:Ignorable="d">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Unloaded">
            <i:InvokeCommandAction Command="{Binding UnloadedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <controls:MetroWindow.InputBindings>
        <KeyBinding Key="D1" Command="{Binding MenuItemKeyInvokedCommand}" CommandParameter="{Binding Path=MenuItems[0].PageKey}" Modifiers="Alt" />
        <KeyBinding Key="D2" Command="{Binding MenuItemKeyInvokedCommand}" CommandParameter="{Binding Path=MenuItems[1].PageKey}" Modifiers="Alt" />
        <KeyBinding Key="OemComma" Command="{Binding ButtomMenuItemKeyInvokedCommand}" CommandParameter="{Binding Path=ButtomMenuItems[0].PageKey}" Modifiers="Ctrl" />
        <KeyBinding Key="OemComma" Command="{Binding ChangeIsDebugViewCommand}" CommandParameter="{Binding Path=ButtomMenuItems[0].PageKey}" Modifiers="Ctrl+Shift+Alt" />
    </controls:MetroWindow.InputBindings>
    <controls:MetroWindow.Resources>
        <c:StringFontAwesomeIconConverter x:Key="StringFontAwesomeIconConverter" />
        <BooleanToVisibilityConverter x:Key="BoolVisibilityConverter" />
        <Style x:Key="HumbergerMenuStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="ToolTip" Value="{Binding Name}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="48" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <fa:ImageAwesome Grid.Column="0" Width="40" Height="40" HorizontalAlignment="Center" VerticalAlignment="Center" Icon="{Binding IconName, Converter={StaticResource StringFontAwesomeIconConverter}}">
                                <fa:ImageAwesome.Style>
                                    <Style TargetType="{x:Type fa:ImageAwesome}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="true">
                                                <Setter Property="Foreground" Value="#393939" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="false">
                                                <Setter Property="Foreground" Value="#8A8A8A" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </fa:ImageAwesome.Style>
                            </fa:ImageAwesome>
                            <Label Grid.Column="1" Margin="5,0" VerticalAlignment="Center" Content="{Binding Name}" FontFamily="メイリオ" FontSize="16">
                                <Label.Style>
                                    <Style TargetType="{x:Type Label}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="true">
                                                <Setter Property="Foreground" Value="#393939" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="false">
                                                <Setter Property="Foreground" Value="#8A8A8A" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Label.Style>
                            </Label>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </controls:MetroWindow.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="23" />
        </Grid.RowDefinitions>
        <local:DebugView Panel.ZIndex="100" Visibility="{Binding Path=DataContext.IsDebugView, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Converter={StaticResource BoolVisibilityConverter}}" />
        <controls:HamburgerMenu Grid.Row="0"
                                DisplayMode="CompactOverlay"
                                IsPaneOpen="False"
                                ItemCommand="{Binding MenuItemInvokedCommand}"
                                ItemContainerStyle="{StaticResource HumbergerMenuStyle}"
                                ItemsSource="{Binding MenuItems}"
                                OptionsItemCommand="{Binding ButtomMenuItemInvokedCommand}"
                                OptionsItemContainerStyle="{StaticResource HumbergerMenuStyle}"
                                OptionsItemsSource="{Binding ButtomMenuItems}"
                                PaneBackground="Azure"
                                PaneForeground="#393939"
                                SelectedItem="{Binding SelectedMenuItem}"
                                SelectedOptionsItem="{Binding SelectedButtomMenuItem}">
            <controls:HamburgerMenu.Style>
                <Style TargetType="{x:Type controls:HamburgerMenu}">
                    <Setter Property="IsTabStop" Value="False" />
                </Style>
            </controls:HamburgerMenu.Style>
            <controls:HamburgerMenu.Content>
                <ContentControl x:Name="HamburgerMenuContentAria" d:Background="Pink" />
            </controls:HamburgerMenu.Content>
        </controls:HamburgerMenu>
        <local:StatusBarControl Grid.Row="1" DataContext="{Binding Container}" />
    </Grid>
</controls:MetroWindow>
